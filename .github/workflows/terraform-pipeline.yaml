name: Deploy Infrastructure

on:
  push:
    branches:
      - dev
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '**.md'
  pull_request:
      paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '**.md'

jobs:
  tf_pipeline:
    name: Terraform Pipeline
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Pull down terraform 1.2
      id: install
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2
        # setting the wrapper to false makes terraform output available to the runner
        terraform_wrapper: false 
        
 
    - name: Terraform format
      id: fmt
      run: terraform fmt -check
 
    - name: Terraform init
      id: init
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
        TF_VAR_FRANKFURTKEY : ${{ secrets.TF_VAR_FRANKFURTKEY }}
      run: terraform init -input=false

    - name: Terraform validate
      id: validate
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
        TF_VAR_FRANKFURTKEY : ${{ secrets.TF_VAR_FRANKFURTKEY }}
      run: terraform validate -no-color

    - name: Terraform plan
      id: plan
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
        TF_VAR_FRANKFURTKEY : ${{ secrets.TF_VAR_FRANKFURTKEY }}
      run: terraform plan -no-color --out tfplan.binary -input=false -compact-warnings -lock=false

    - name: Terraform plan Status
      id: evaluate
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform jsonify
      id: jsonify
      run: |
        terraform show -json tfplan.binary > tfplan.json

    - name: Checkov
      id: checkov
      env:
        BC_FROM_BRANCH: 'dev'
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
        TF_VAR_FRANKFURTKEY : ${{ secrets.TF_VAR_FRANKFURTKEY }}
      uses: bridgecrewio/checkov-action@master
      with:
        framework: terraform
        file: tfplan.json
        quiet: false
        soft_fail: false

    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      env:
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
        TF_VAR_FRANKFURTKEY : ${{ secrets.TF_VAR_FRANKFURTKEY }}
      run: terraform apply -auto-approve -input=false -lock=false

    - name: Terraform output EC2 public IP
      run: |
        ec2=$(terraform output ec1-public-ip)
        echo $ec2
      
